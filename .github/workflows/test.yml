name: Integration Test
on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '42 06 * * *'
jobs:
  test:
    name: Integration Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Host information
        run: |
          echo "::group::Host information"
          echo "Hostname: $(hostname)"
          echo "IP: $(hostname -I)"
          echo "::endgroup::"
          echo "::group::Filesystem"
          df -h
          echo "::endgroup::"
          echo "::group::Memory"
          free -h
          echo "::endgroup::"
          echo "::group::CPU"
          lscpu
          echo "::endgroup::"

      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          tags: pwncollege/dojo:test
          load: true
          no-cache: ${{ github.event_name == 'schedule' }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Prepare Firefox
        uses: browser-actions/setup-firefox@latest

      - name: Install test dependencies
        run: pip install pytest pytest-dependency requests selenium

      - name: Run dojo
        run: |
          docker run \
            --name dojo-test \
            --privileged \
            --detach \
            --rm \
            -p 2222:22 -p 80:80 -p 443:443 \
            pwncollege/dojo:test

      - name: Wait for services to build and start
        run: |
          docker exec dojo-test dojo wait
          docker exec dojo-test docker image ls

      - name: Wait for services to be ready
        timeout-minutes: 2
        run: |
          docker exec dojo-test dojo compose logs -f &
          log_pid=$!

          until [[ "$(docker exec dojo-test docker inspect --format='{{.State.Health.Status}}' ctfd)" == "healthy" ]]; do
            sleep 1
          done

          kill $log_pid
          exit 0

      - name: Run tests against dojo
        run: |
          export MOZ_HEADLESS=1
          pytest -vrpP ./test || (docker exec dojo-test docker compose logs && false)
